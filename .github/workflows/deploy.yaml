name: Deploy Infrastructure on Azure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform-quality:
    name: Terraform quality code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/environments/dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        id: validate
        run: terraform validate

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [terraform-quality]
    defaults:
      run:
        working-directory: ./terraform/environments/dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Login to Azure for Plan
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -no-color \
            -var="resource_group_name=${{ vars.RESOURCE_GROUP_NAME }}" \
            -var="aks_cluster_name=${{ vars.AKS_CLUSTER_NAME }}" \
            -var="environment=${{ vars.ENVIRONMENT }}" \
            -var="dockerhub_username=${{ secrets.DOCKERHUB_USERNAME }}" \
            -var="vehicle_service_image_name=${{ vars.VEHICLE_SERVICE_IMAGE_NAME }}" \
            -var="vehicle_service_image_tag=${{ vars.VEHICLE_SERVICE_IMAGE_TAG }}" \
            -var="vehicle_payment_image_name=${{ vars.VEHICLE_PAYMENT_IMAGE_NAME }}" \
            -var="vehicle_payment_image_tag=${{ vars.VEHICLE_PAYMENT_IMAGE_TAG }}"

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [terraform-plan]
    defaults:
      run:
        working-directory: ./terraform/environments/dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Apply
        id: apply
        run: |
          terraform apply -auto-approve -input=false \
            -var="resource_group_name=${{ vars.RESOURCE_GROUP_NAME }}" \
            -var="aks_cluster_name=${{ vars.AKS_CLUSTER_NAME }}" \
            -var="environment=${{ vars.ENVIRONMENT }}" \
            -var="dockerhub_username=${{ secrets.DOCKERHUB_USERNAME }}" \
            -var="vehicle_service_image_name=${{ vars.VEHICLE_SERVICE_IMAGE_NAME }}" \
            -var="vehicle_service_image_tag=${{ vars.VEHICLE_SERVICE_IMAGE_TAG }}" \
            -var="vehicle_payment_image_name=${{ vars.VEHICLE_PAYMENT_IMAGE_NAME }}" \
            -var="vehicle_payment_image_tag=${{ vars.VEHICLE_PAYMENT_IMAGE_TAG }}"
